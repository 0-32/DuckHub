repeat wait() until game:IsLoaded()
wait(3)
local success, errormessage = pcall(function ()
	game:GetService("Players").LocalPlayer.PlayerGui.Loading.Main.Bar.Percentage.Name = "Percentage"
end)
print("2", game:GetService("Players").LocalPlayer.PlayerGui.Loading.Main.Bar.Percentage.Name)
if success then
	repeat wait() until tonumber(string.match(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Loading").Main.Bar.Percentage.Text,"%d")) >= 90
end
getgenv().YHK = "xVah*#96sg6^3oEu0"


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   	
   	Name = "Duck Hub - "..tostring(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name),
   	LoadingTitle = "Duck Hub",
   	LoadingSubtitle = "by ",
   	ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   	},
   	Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   	},
   	KeySystem = false, -- Set this to true to use our key system
   	KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   	}})

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

local Tab = Window:CreateTab("AFS", 6034848748)

local Section = Tab:CreateSection("Script Hubs")
	local Button = Tab:CreateButton({
   		Name = "Platnium Hub | drazox1732",
   		Callback = function()
   			loadstring(game:HttpGet("https://raw.githubusercontent.com/ZaRdoOx/Loader/main/PlatiniumLoader"))()		
   		end,
	})
	local Button = Tab:CreateButton({
   		Name = "Yuto Hub | yuteaz",
   		Callback = function()
   			loadstring(game:HttpGet("https://raw.githubusercontent.com/Binintrozza/yutv2e/main/afss"))()
   			wait()
   			game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui"):WaitForChild("Frame"):WaitForChild("ImageLabel"):WaitForChild("ImageLabel"):WaitForChild("type key"):WaitForChild("TextBox").Text = getgenv().YHK
   		end,
	})
	local Button = Tab:CreateButton({
   		Name = "Sky Hub | ",
   		Callback = function()
   			loadstring(game:HttpGet('https://raw.githubusercontent.com/SKOIXLL/RIVERHUB-SKYHUB/main/WL.lua'))();
   		end,
	})
		
local Section = Tab:CreateSection("Dupe Scripts")
	local Button = Tab:CreateButton({
   		Name = "Badware | collorem",
   		Callback = function()
   			loadstring(game:HttpGet("https://raw.githubusercontent.com/sandwichk/RobloxScripts/main/Scripts/BadWare/Dupe/AFSim", true))()
   		end,
	})
	local Button = Tab:CreateButton({
   		Name = "Scriptagens | solex",
   		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/solexz/rbx-scripts/main/solexafs.lua"))()	
   		end,
	})


local Tab2 = Window:CreateTab("Auto Execute", 6034509993)
local Section = Tab2:CreateSection("Auto Execute Toggles - *Will re-xecute script when toggled on")
	local Toggle = Tab2:CreateToggle({
		Name = "Yuto Hub | yuteaz",
		CurrentValue = false,
		Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/Binintrozza/yutv2e/main/afss"))()
   				wait()
   				game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui"):WaitForChild("Frame"):WaitForChild("ImageLabel"):WaitForChild("ImageLabel"):WaitForChild("type key"):WaitForChild("TextBox").Text = getgenv().YHK
			end
		end,
	})
	local Toggle2 = Tab2:CreateToggle({
		Name = "Badware | collorem",
		CurrentValue = false,
		Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/sandwichk/RobloxScripts/main/Scripts/BadWare/Dupe/AFSim", true))()
			end
		end,
	})


local Tab3 = Window:CreateTab("Misc", 6034509993)
local Section2 = Tab3:CreateSection("Misc")
	local Button = Tab3:CreateButton({
   		Name = "Infinite Yield | idk",
   		Callback = function()
   			repeat wait() until game:IsLoaded()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   		end,
	})
	local Button2 = Tab3:CreateButton({
   		Name = "NukeVsCity Hub | idk",
   		Callback = function()
   			repeat wait() until game:IsLoaded()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader", true))()
   		end,
	})
	local Toggle = Tab3:CreateToggle({
		Name = "Infinite Yield Auto Execute | idk",
		CurrentValue = false,
		Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value then
				loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
			end
		end,
	})
	local Toggle2 = Tab3:CreateToggle({
		Name = "NukeVsCity Hub Auto Execute| idk",
		CurrentValue = false,
		Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader", true))()
			end
		end,
	})
